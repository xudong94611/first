<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cim.cimConfig.dao.CableDefinitionsDao">

    <select id="get" resultType="com.cim.cimConfig.domain.CableDefinitionsDO">
        select * from cableDefinitions where serial = #{value}
    </select>
    <select id="list" resultType="com.cim.cimConfig.domain.CableDefinitionsDO">
        select * from cableDefinitions
        <if test="searchName != null and searchName.trim() != ''">
            WHERE modelNumber LIKE '%'+#{searchName}+'%'
        </if>
        ORDER BY serial desc
        <if test="offset != null and limit != null">
            OFFSET ${offset} ROWS FETCH NEXT ${limit} ROWS ONLY
        </if>
    </select>
    <select id="list2" resultType="com.cim.cimConfig.domain.CableDefinitionsDO">
        select
        <if test="offset != null and limit != null">
        top ${limit}
        </if>
        * from cableDefinitions
        <if test="offset != null and limit != null">
        where serial not in (select top ${offset} serial from cableDefinitions
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order})
            </when>
            <otherwise>
                order by serial desc)
            </otherwise>
        </choose>
        </if>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by serial desc
            </otherwise>
        </choose>
    </select>

    <select id="count" resultType="int">
        select count(*) from cableDefinitions
    </select>

    <insert id="save" parameterType="com.cim.cimConfig.domain.CableDefinitionsDO" useGeneratedKeys="true"
            keyProperty="serial">
        insert into cableDefinitions
        (
        modelNumber,
        type,
        abbreviation,
        description,
        texture,
        color,
        minTurningRadius,
        crossShapeType,
        sideLengthArray,
        coreArray,
        coreCrossSectionAreas,
        jointModels,
        centerLocations,
        width,
        unitName
        )
        values
        (
        #{modelNumber},
        #{type},
        #{abbreviation},
        #{description},
        #{texture},
        #{color},
        #{minTurningRadius},
        #{crossShapeType},
        #{sideLengthArray},
        #{coreArray},
        #{coreCrossSectionAreas},
        #{jointModels},
        #{centerLocations},
        #{width},
        #{unitName}
        )
    </insert>

    <update id="update" parameterType="com.cim.cimConfig.domain.CableDefinitionsDO">
        update cableDefinitions
        <set>
            <if test="modelNumber != null">modelNumber = #{modelNumber},</if>
            <if test="type != null">type = #{type},</if>
            <if test="abbreviation != null">abbreviation = #{abbreviation},</if>
            <if test="description != null">description = #{description},</if>
            <if test="texture != null">texture = #{texture},</if>
            <if test="color != null">color = #{color},</if>
            <if test="minTurningRadius != null">minTurningRadius = #{minTurningRadius},</if>
            <if test="crossShapeType != null">crossShapeType = #{crossShapeType},</if>
            <if test="sideLengthArray != null">sideLengthArray = #{sideLengthArray},</if>
            <if test="coreArray != null">coreArray = #{coreArray},</if>
            <if test="coreCrossSectionAreas != null">coreCrossSectionAreas = #{coreCrossSectionAreas},</if>
            <if test="jointModels != null">jointModels = #{jointModels},</if>
            <if test="centerLocations != null">centerLocations = #{centerLocations},</if>
            <if test="width != null">width = #{width},</if>
            <if test="unitName != null">unitName = #{unitName}</if>
        </set>
        where serial = #{serial}
    </update>

    <delete id="remove">
        delete from cableDefinitions where serial = #{value}
    </delete>

    <delete id="batchRemove">
        delete from cableDefinitions where serial in
        <foreach item="serial" collection="array" open="(" separator="," close=")">
            #{serial}
        </foreach>
    </delete>

</mapper>