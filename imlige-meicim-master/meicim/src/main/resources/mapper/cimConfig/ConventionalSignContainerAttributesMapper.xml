<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cim.cimConfig.dao.ConventionalSignContainerAttributesDao">

	<select id="get"
		resultType="com.cim.cimConfig.domain.ConventionalSignContainerAttributesDO">
		select * from conventionalSignContainerAttributes where serial = #{value}
	</select>
	<select id="list"
		resultType="com.cim.cimConfig.domain.ConventionalSignContainerAttributesDO">
		select * from conventionalSignContainerAttributes
		<if test="searchName != null and searchName.trim() != ''">
			WHERE drawingType LIKE '%'+#{searchName}+'%'
		</if>
		ORDER BY serial desc
		<if test="offset != null and limit != null">
			OFFSET ${offset} ROWS FETCH NEXT ${limit} ROWS ONLY
		</if>
	</select>
	<select id="list2"
		resultType="com.cim.cimConfig.domain.ConventionalSignContainerAttributesDO">
		select
		<if test="offset != null and limit != null">
			top ${limit}
		</if>
		* from conventionalSignContainerAttributes
		<if test="offset != null and limit != null">
			where serial not in (select top ${offset} serial from
			conventionalSignContainerAttributes
			<choose>
				<when test="sort != null and sort.trim() != ''">
					order by ${sort} ${order})
				</when>
				<otherwise>
					order by serial desc)
				</otherwise>
			</choose>
		</if>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by serial desc
			</otherwise>
		</choose>
	</select>

	<select id="count" resultType="int">
		select count(*) from conventionalSignContainerAttributes
	</select>

	<insert id="save"
		parameterType="com.cim.cimConfig.domain.ConventionalSignContainerAttributesDO"
		useGeneratedKeys="true" keyProperty="serial">
		insert into conventionalSignContainerAttributes
		(
		drawingType,
		signTypeAll,
		signCaptionAll,
		signWidth,
		captionWidth,
		widthStep,
		heightStep,
		domainWidth,
		domainHeight,
		originalPoint,
		titleFormatName,
		contentFormatName
		)
		values
		(
		#{drawingType},
		#{signTypeAll},
		#{signCaptionAll},
		#{signWidth},
		#{captionWidth},
		#{widthStep},
		#{heightStep},
		#{domainWidth},
		#{domainHeight},
		#{originalPoint},
		#{titleFormatName},
		#{contentFormatName}
		)
	</insert>

	<update id="update"
		parameterType="com.cim.cimConfig.domain.ConventionalSignContainerAttributesDO">
		update conventionalSignContainerAttributes
		<set>
			<if test="drawingType != null">drawingType = #{drawingType},</if>
			<if test="signTypeAll != null">signTypeAll = #{signTypeAll},</if>
			<if test="signCaptionAll != null">signCaptionAll = #{signCaptionAll},</if>
			<if test="signWidth != null">signWidth = #{signWidth},</if>
			<if test="captionWidth != null">captionWidth = #{captionWidth},</if>
			<if test="widthStep != null">widthStep = #{widthStep},</if>
			<if test="heightStep != null">heightStep = #{heightStep},</if>
			<if test="domainWidth != null">domainWidth = #{domainWidth},</if>
			<if test="domainHeight != null">domainHeight = #{domainHeight},</if>
			<if test="originalPoint != null">originalPoint = #{originalPoint},</if>
			<if test="titleFormatName != null">titleFormatName = #{titleFormatName},</if>
			<if test="contentFormatName != null">contentFormatName = #{contentFormatName}</if>
		</set>
		where serial = #{serial}
	</update>

	<delete id="remove">
		delete from conventionalSignContainerAttributes where serial = #{value}
	</delete>

	<delete id="batchRemove">
		delete from conventionalSignContainerAttributes where serial in
		<foreach item="serial" collection="array" open="("
			separator="," close=")">
			#{serial}
		</foreach>
	</delete>

</mapper>