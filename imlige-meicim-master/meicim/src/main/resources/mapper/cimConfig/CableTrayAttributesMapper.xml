<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cim.cimConfig.dao.CableTrayAttributesDao">

	<select id="get"
		resultType="com.cim.cimConfig.domain.CableTrayAttributesDO">
		select * from cableTrayAttributes where serial = #{value}
	</select>
	<select id="list"
		resultType="com.cim.cimConfig.domain.CableTrayAttributesDO">
		select * from cableTrayAttributes
		<if test="searchName != null and searchName.trim() != ''">
			WHERE modelNumber LIKE '%'+#{searchName}+'%'
		</if>
		ORDER BY serial desc
		<if test="offset != null and limit != null">
			OFFSET ${offset} ROWS FETCH NEXT ${limit} ROWS ONLY
		</if>
	</select>
	<select id="list2"
		resultType="com.cim.cimConfig.domain.CableTrayAttributesDO">
		select
		<if test="offset != null and limit != null">
			top ${limit}
		</if>
		* from cableTrayAttributes
		<if test="offset != null and limit != null">
			where serial not in (select top ${offset} serial from
			cableTrayAttributes
			<choose>
				<when test="sort != null and sort.trim() != ''">
					order by ${sort} ${order})
				</when>
				<otherwise>
					order by serial desc)
				</otherwise>
			</choose>
		</if>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by serial desc
			</otherwise>
		</choose>
	</select>

	<select id="count" resultType="int">
		select count(*) from cableTrayAttributes
	</select>

	<insert id="save"
		parameterType="com.cim.cimConfig.domain.CableTrayAttributesDO"
		useGeneratedKeys="true" keyProperty="serial">
		insert into cableTrayAttributes
		(
		className,
		modelNumber,
		abbreviation,
		description,
		manufacture,
		depth,
		edgeDepth,
		edgeHeight,
		railDepth,
		railHeight,
		railDistance,
		myMaterial,
		railMaterial,
		tunnelCount
		)
		values
		(
		#{className},
		#{modelNumber},
		#{abbreviation},
		#{description},
		#{manufacture},
		#{depth},
		#{edgeDepth},
		#{edgeHeight},
		#{railDepth},
		#{railHeight},
		#{railDistance},
		#{myMaterial},
		#{railMaterial},
		#{tunnelCount}
		)
	</insert>

	<update id="update"
		parameterType="com.cim.cimConfig.domain.CableTrayAttributesDO">
		update cableTrayAttributes
		<set>
			<if test="className != null">className = #{className},</if>
			<if test="modelNumber != null">modelNumber = #{modelNumber},</if>
			<if test="abbreviation != null">abbreviation = #{abbreviation},</if>
			<if test="description != null">description = #{description},</if>
			<if test="manufacture != null">manufacture = #{manufacture},</if>
			<if test="depth != null">depth = #{depth},</if>
			<if test="edgeDepth != null">edgeDepth = #{edgeDepth},</if>
			<if test="edgeHeight != null">edgeHeight = #{edgeHeight},</if>
			<if test="railDepth != null">railDepth = #{railDepth},</if>
			<if test="railHeight != null">railHeight = #{railHeight},</if>
			<if test="railDistance != null">railDistance = #{railDistance},</if>
			<if test="myMaterial != null">myMaterial = #{myMaterial},</if>
			<if test="railMaterial != null">railMaterial = #{railMaterial},</if>
			<if test="tunnelCount != null">tunnelCount = #{tunnelCount}</if>
		</set>
		where serial = #{serial}
	</update>

	<delete id="remove">
		delete from cableTrayAttributes where serial = #{value}
	</delete>

	<delete id="batchRemove">
		delete from cableTrayAttributes where serial in
		<foreach item="serial" collection="array" open="("
			separator="," close=")">
			#{serial}
		</foreach>
	</delete>

</mapper>